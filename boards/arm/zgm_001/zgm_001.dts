/*
 * Copyright (c) 2019 Richard Osterloh <richard.osterloh@gmail.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;
#include <st/g4/stm32g431Xb.dtsi>
#include <st/g4/stm32g431c(6-8-b)ux-pinctrl.dtsi>

/ {
	model = "STMicroelectronics STM32G431RB-NUCLEO_X board";
	compatible = "st,stm32g431rb_x-nucleo";

	chosen {
		zephyr,console = &usart3;
		zephyr,shell-uart = &usart3;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &slot0_partition;
	};

	leds: leds {
		compatible = "gpio-leds";
		green_led: led_0 {
			gpios = <&gpioc 4 GPIO_ACTIVE_HIGH>;
			label = "User LD2";
		};
	};
    motors {
        motor1: motor_1 {
            compatible = "motor-bldc";
            control-algorithm = <&foc1>;
            status = "okay";
        };
    };
	control_algorithm {
		foc1:ctrl_algo1{
			compatible = "foc-ctrl-algo";
			currsmp = <&currsmp1>;
			pwm = <&pwm1>;
			feedback = <&abz_hall2>;
			modulate = <1>;
			status = "okay";
		};
	};	
	aliases {
		led0 = &green_led;
		mcuboot-led0 = &green_led;
		watchdog0 = &iwdg;
	};
};

&clk_lsi {
	status = "okay";
};

&clk_lse {
	status = "disabled";
};

&clk_hsi48 {
	status = "okay";
};

&clk_hse {
	clock-frequency = <DT_FREQ_M(24)>;
	status = "okay";
};

&pll {
	div-m = <6>;
	mul-n = <85>;
	div-p = <7>;
	div-q = <2>;
	div-r = <2>;
	clocks = <&clk_hse>;
	status = "okay";
};

&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(170)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <1>;
	apb2-prescaler = <1>;
};

&rng {
	clocks = <&rcc STM32_CLOCK_BUS_AHB2 0x04000000>,
		 <&rcc STM32_SRC_HSI48 CLK48_SEL(0)>;
	status = "okay";
};

&usart3 {
	pinctrl-0 = <&usart3_tx_pb10 &usart3_rx_pb11>;
	pinctrl-names = "default";
	current-speed = <115200>;
	status = "okay";
};

stm32_lp_tick_source: &lptim1 {
	clocks = <&rcc STM32_CLOCK_BUS_APB1 0x80000000>,
		 <&rcc STM32_SRC_LSE LPTIM1_SEL(3)>;
	status = "okay";
};

&rtc {
	clocks = <&rcc STM32_CLOCK_BUS_APB1 0x00000400>,
		 <&rcc STM32_SRC_LSI RTC_SEL(2)>;
	status = "okay";
};

&flash0 {

	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "mcuboot";
			reg = <0x00000000 DT_SIZE_K(34)>;
		};
		slot0_partition: partition@8800 {
			label = "image-0";
			reg = <0x00008800 DT_SIZE_K(48)>;
		};
		slot1_partition: partition@14800 {
			label = "image-1";
			reg = <0x00014800 DT_SIZE_K(42)>;
		};
		/* Set 4Kb of storage at the end of the 128Kb of flash */
		storage_partition: partition@1f000 {
			label = "storage";
			reg = <0x0001f000 DT_SIZE_K(4)>;
		};
	};
};

&timers1 {
    pwm1: pwm {
        compatible = "st,stm32-pwm-custom";
        pinctrl-0 = <&tim1_ch1_pe9  &tim1_ch1n_pe8
                    &tim1_ch2_pe11 &tim1_ch2n_pe10
                    &tim1_ch3_pe13 &tim1_ch3n_pe12>;
        pinctrl-names = "default";
        timing-params = <120 13750 0>;  // t_dead_ns, arr, psc
        slave = <0>;
        status = "okay";
    };
};
&adc1 {
	currsmp1: currsmp {
		compatible = "st,stm32-currsmp-shunt";
		pinctrl-0 = <&adc1_inp16_pa0  &adc1_inp17_pa1 &adc1_inp14_pa2>;
		pinctrl-names = "default";
		adc-channels = <16 17 14>;
		adc-slave = <0>;
		status = "okay";
	};
};
&timers3 {
	abz_hall1: abz_hall {
		compatible = "st,stm32-abz-hall";
		pinctrl-0 = <&tim3_ch1_pb4 &tim3_ch2_pb5>;
		pinctrl-names = "default";
		lines = <4096>;
		pole-pairs = <15>;
		hu-gpios = <&gpiod 1 GPIO_ACTIVE_HIGH>;
		hv-gpios = <&gpiob 2 GPIO_ACTIVE_HIGH>;
		hw-gpios = <&gpiod 0 GPIO_ACTIVE_HIGH>;
		status = "okay";
	};
};
